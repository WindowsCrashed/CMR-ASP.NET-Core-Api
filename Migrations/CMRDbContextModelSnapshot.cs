// <auto-generated />
using System;
using CMRWebApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMRWebApi.Migrations
{
    [DbContext(typeof(CMRDbContext))]
    partial class CMRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CMRWebApi.Models.AudioRecording", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AudioPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Performers")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PieceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RecordLabel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PieceId");

                    b.ToTable("AudioRecordings");
                });

            modelBuilder.Entity("CMRWebApi.Models.Composer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Birth")
                        .HasColumnType("longtext");

                    b.Property<string>("Death")
                        .HasColumnType("longtext");

                    b.Property<string>("History")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nationality")
                        .HasColumnType("longtext");

                    b.Property<string>("Period")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Composers");
                });

            modelBuilder.Entity("CMRWebApi.Models.Piece", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Catalog")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ComposerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Movements")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TonalityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Year")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ComposerId");

                    b.HasIndex("TonalityId");

                    b.ToTable("Pieces");
                });

            modelBuilder.Entity("CMRWebApi.Models.SheetMusic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PieceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PieceId");

                    b.ToTable("SheetMusic");
                });

            modelBuilder.Entity("CMRWebApi.Models.Tonality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tonality");
                });

            modelBuilder.Entity("CMRWebApi.Models.VideoRecording", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Channel")
                        .HasColumnType("longtext");

                    b.Property<string>("Performers")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PieceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PieceId");

                    b.ToTable("VideoRecordings");
                });

            modelBuilder.Entity("CMRWebApi.Models.AudioRecording", b =>
                {
                    b.HasOne("CMRWebApi.Models.Piece", "Piece")
                        .WithMany("AudioRecordings")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("CMRWebApi.Models.Piece", b =>
                {
                    b.HasOne("CMRWebApi.Models.Composer", "Composer")
                        .WithMany()
                        .HasForeignKey("ComposerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMRWebApi.Models.Tonality", "Tonality")
                        .WithMany("Pieces")
                        .HasForeignKey("TonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Composer");

                    b.Navigation("Tonality");
                });

            modelBuilder.Entity("CMRWebApi.Models.SheetMusic", b =>
                {
                    b.HasOne("CMRWebApi.Models.Piece", "Piece")
                        .WithMany("SheetMusic")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("CMRWebApi.Models.VideoRecording", b =>
                {
                    b.HasOne("CMRWebApi.Models.Piece", "Piece")
                        .WithMany("VideoRecordings")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("CMRWebApi.Models.Piece", b =>
                {
                    b.Navigation("AudioRecordings");

                    b.Navigation("SheetMusic");

                    b.Navigation("VideoRecordings");
                });

            modelBuilder.Entity("CMRWebApi.Models.Tonality", b =>
                {
                    b.Navigation("Pieces");
                });
#pragma warning restore 612, 618
        }
    }
}
